{
  "version": 3,
  "sources": ["../../node_modules/@material/web/slider/internal/forced-colors-styles.ts", "../../node_modules/@material/web/elevation/internal/elevation.ts", "../../node_modules/@material/web/elevation/internal/elevation-styles.ts", "../../node_modules/@material/web/elevation/elevation.ts", "../../node_modules/@material/web/internal/controller/attachable-controller.ts", "../../node_modules/@material/web/focus/internal/focus-ring.ts", "../../node_modules/@material/web/focus/internal/focus-ring-styles.ts", "../../node_modules/@material/web/focus/md-focus-ring.ts", "../../node_modules/@material/web/ripple/internal/ripple.ts", "../../node_modules/@material/web/ripple/internal/ripple-styles.ts", "../../node_modules/@material/web/ripple/ripple.ts", "../../node_modules/lit-html/src/directives/when.ts", "../../node_modules/@material/web/internal/events/form-label-activation.ts", "../../node_modules/@material/web/slider/internal/slider.ts", "../../node_modules/@material/web/slider/internal/slider-styles.ts", "../../node_modules/@material/web/slider/slider.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./slider/internal/forced-colors-styles.css.\nimport {css} from 'lit';\nexport const styles = css`@media(forced-colors: active){:host{--md-slider-active-track-color: CanvasText;--md-slider-disabled-active-track-color: GrayText;--md-slider-disabled-active-track-opacity: 1;--md-slider-disabled-handle-color: GrayText;--md-slider-disabled-inactive-track-color: GrayText;--md-slider-disabled-inactive-track-opacity: 1;--md-slider-focus-handle-color: CanvasText;--md-slider-handle-color: CanvasText;--md-slider-handle-shadow-color: Canvas;--md-slider-hover-handle-color: CanvasText;--md-slider-hover-state-layer-color: Canvas;--md-slider-hover-state-layer-opacity: 1;--md-slider-inactive-track-color: Canvas;--md-slider-label-container-color: Canvas;--md-slider-label-text-color: CanvasText;--md-slider-pressed-handle-color: CanvasText;--md-slider-pressed-state-layer-color: Canvas;--md-slider-pressed-state-layer-opacity: 1;--md-slider-with-overlap-handle-outline-color: CanvasText}.label,.label::before{border:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}:host(:not([disabled])) .track::before{border:1px solid var(--_active-track-color)}.tickmarks::before{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='CanvasText'%3E%3Ccircle cx='2' cy='2'  r='1'/%3E%3C/svg%3E\")}.tickmarks::after{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='Canvas'%3E%3Ccircle cx='2' cy='2' r='1'/%3E%3C/svg%3E\")}:host([disabled]) .tickmarks::before{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='Canvas'%3E%3Ccircle cx='2' cy='2'  r='1'/%3E%3C/svg%3E\")}}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\n\n/**\n * A component for elevation.\n */\nexport class Elevation extends LitElement {\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    return html`<span class=\"shadow\"></span>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./elevation/internal/elevation-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host,.shadow,.shadow::before,.shadow::after{border-radius:inherit;inset:0;position:absolute;transition-duration:inherit;transition-property:inherit;transition-timing-function:inherit}:host{display:flex;pointer-events:none;transition-property:box-shadow,opacity}.shadow::before,.shadow::after{content:\"\";transition-property:box-shadow,opacity;--_level: var(--md-elevation-level, 0);--_shadow-color: var(--md-elevation-shadow-color, var(--md-sys-color-shadow, #000))}.shadow::before{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 3,1) + 2*clamp(0,var(--_level) - 4,1))) calc(1px*(2*clamp(0,var(--_level),1) + clamp(0,var(--_level) - 2,1) + clamp(0,var(--_level) - 4,1))) 0px var(--_shadow-color);opacity:.3}.shadow::after{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 1,1) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(3*clamp(0,var(--_level),2) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(clamp(0,var(--_level),4) + 2*clamp(0,var(--_level) - 4,1))) var(--_shadow-color);opacity:.15}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Elevation} from './internal/elevation.js';\nimport {styles} from './internal/elevation-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-elevation': MdElevation;\n  }\n}\n\n/**\n * The `<md-elevation>` custom element with default styles.\n *\n * Elevation is the relative distance between two surfaces along the z-axis.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-elevation')\nexport class MdElevation extends Elevation {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * An element that can be attached to an associated controlling element.\n */\nexport interface Attachable {\n  /**\n   * Reflects the value of the `for` attribute, which is the ID of the element's\n   * associated control.\n   *\n   * Use this when the elements's associated control is not its parent.\n   *\n   * To manually control an element, set its `for` attribute to `\"\"`.\n   *\n   * @example\n   * ```html\n   * <div class=\"container\">\n   *   <md-attachable for=\"interactive\"></md-attachable>\n   *   <button id=\"interactive\">Action</button>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```html\n   * <button class=\"manually-controlled\">\n   *   <md-attachable for=\"\"></md-attachable>\n   * </button>\n   * ```\n   */\n  htmlFor: string | null;\n\n  /**\n   * Gets or sets the element that controls the visibility of the attachable\n   * element. It is one of:\n   *\n   * - The control referenced by the `for` attribute.\n   * - The control provided to `element.attach(control)`\n   * - The element's parent.\n   * - `null` if the element is not controlled.\n   */\n  control: HTMLElement | null;\n\n  /**\n   * Attaches the element to an interactive control.\n   *\n   * @param control The element that controls the attachable element.\n   */\n  attach(control: HTMLElement): void;\n\n  /**\n   * Detaches the element from its current control.\n   */\n  detach(): void;\n}\n\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\n\n/**\n * The host of an `AttachableController`. The controller will add itself to\n * the host so it can be retrieved in a global `MutationObserver`.\n */\ninterface AttachableControllerHost extends ReactiveControllerHost, HTMLElement {\n  [ATTACHABLE_CONTROLLER]?: AttachableController;\n}\n\nlet FOR_ATTRIBUTE_OBSERVER: MutationObserver | undefined;\n\nif (!isServer) {\n  /**\n   * A global `MutationObserver` that reacts to `for` attribute changes on\n   * `Attachable` elements. If the `for` attribute changes, the controller will\n   * re-attach to the new referenced element.\n   */\n  FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n    for (const record of records) {\n      // When a control's `for` attribute changes, inform its\n      // `AttachableController` to update to a new control.\n      (record.target as AttachableControllerHost)[\n        ATTACHABLE_CONTROLLER\n      ]?.hostConnected();\n    }\n  });\n}\n\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController implements ReactiveController, Attachable {\n  get htmlFor() {\n    return this.host.getAttribute('for');\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    if (htmlFor === null) {\n      this.host.removeAttribute('for');\n    } else {\n      this.host.setAttribute('for', htmlFor);\n    }\n  }\n\n  get control() {\n    if (this.host.hasAttribute('for')) {\n      if (!this.htmlFor || !this.host.isConnected) {\n        return null;\n      }\n\n      return (\n        this.host.getRootNode() as Document | ShadowRoot\n      ).querySelector<HTMLElement>(`#${this.htmlFor}`);\n    }\n\n    return this.currentControl || this.host.parentElement;\n  }\n  set control(control: HTMLElement | null) {\n    if (control) {\n      this.attach(control);\n    } else {\n      this.detach();\n    }\n  }\n\n  private currentControl: HTMLElement | null = null;\n\n  /**\n   * Creates a new controller for an `Attachable` element.\n   *\n   * @param host The `Attachable` element.\n   * @param onControlChange A callback with two parameters for the previous and\n   *     next control. An `Attachable` element may perform setup or teardown\n   *     logic whenever the control changes.\n   */\n  constructor(\n    private readonly host: AttachableControllerHost,\n    private readonly onControlChange: (\n      prev: HTMLElement | null,\n      next: HTMLElement | null,\n    ) => void,\n  ) {\n    host.addController(this);\n    host[ATTACHABLE_CONTROLLER] = this;\n    FOR_ATTRIBUTE_OBSERVER?.observe(host, {attributeFilter: ['for']});\n  }\n\n  attach(control: HTMLElement) {\n    if (control === this.currentControl) {\n      return;\n    }\n\n    this.setCurrentControl(control);\n    // When imperatively attaching, remove the `for` attribute so\n    // that the attached control is used instead of a referenced one.\n    this.host.removeAttribute('for');\n  }\n\n  detach() {\n    this.setCurrentControl(null);\n    // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n    // ensure the control is `null` rather than the `parentElement`.\n    this.host.setAttribute('for', '');\n  }\n\n  /** @private */\n  hostConnected() {\n    this.setCurrentControl(this.control);\n  }\n\n  /** @private */\n  hostDisconnected() {\n    this.setCurrentControl(null);\n  }\n\n  private setCurrentControl(control: HTMLElement | null) {\n    this.onControlChange(this.currentControl, control);\n    this.currentControl = control;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\n\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement implements Attachable {\n  /**\n   * Makes the focus ring visible.\n   */\n  @property({type: Boolean, reflect: true}) visible = false;\n\n  /**\n   * Makes the focus ring animate inwards instead of outwards.\n   */\n  @property({type: Boolean, reflect: true}) inward = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  /** @private */\n  handleEvent(event: FocusRingEvent) {\n    if (event[HANDLED_BY_FOCUS_RING]) {\n      // This ensures the focus ring does not activate when multiple focus rings\n      // are used within a single component.\n      return;\n    }\n\n    switch (event.type) {\n      default:\n        return;\n      case 'focusin':\n        this.visible = this.control?.matches(':focus-visible') ?? false;\n        break;\n      case 'focusout':\n      case 'pointerdown':\n        this.visible = false;\n        break;\n    }\n\n    event[HANDLED_BY_FOCUS_RING] = true;\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n\n  override update(changed: PropertyValues<FocusRing>) {\n    if (changed.has('visible')) {\n      // This logic can be removed once the `:has` selector has been introduced\n      // to Firefox. This is necessary to allow correct submenu styles.\n      this.dispatchEvent(new Event('visibility-changed'));\n    }\n    super.update(changed);\n  }\n}\n\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n\ninterface FocusRingEvent extends Event {\n  [HANDLED_BY_FOCUS_RING]: true;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./focus/internal/focus-ring-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FocusRing} from './internal/focus-ring.js';\nimport {styles} from './internal/focus-ring-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-focus-ring': MdFocusRing;\n  }\n}\n\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-focus-ring')\nexport class MdFocusRing extends FocusRing {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\nimport {EASING} from '../../internal/motion/animation.js';\n\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nenum State {\n  /**\n   * Initial state of the control, no touch in progress.\n   *\n   * Transitions:\n   *   - on touch down: transition to `TOUCH_DELAY`.\n   *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n   */\n  INACTIVE,\n  /**\n   * Touch down has been received, waiting to determine if it's a swipe or\n   * scroll.\n   *\n   * Transitions:\n   *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n   *   - on cancel: transition to `INACTIVE`.\n   *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n   */\n  TOUCH_DELAY,\n  /**\n   * A touch has been deemed to be a press\n   *\n   * Transitions:\n   *  - on up: transition to `WAITING_FOR_CLICK`.\n   */\n  HOLDING,\n  /**\n   * The user touch has finished, transition into rest state.\n   *\n   * Transitions:\n   *   - on click end press; transition to `INACTIVE`.\n   */\n  WAITING_FOR_CLICK,\n}\n\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n  'click',\n  'contextmenu',\n  'pointercancel',\n  'pointerdown',\n  'pointerenter',\n  'pointerleave',\n  'pointerup',\n];\n\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n  ? null\n  : window.matchMedia('(forced-colors: active)');\n\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement implements Attachable {\n  /**\n   * Disables the ripple.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  @state() private hovered = false;\n  @state() private pressed = false;\n\n  @query('.surface') private readonly mdRoot!: HTMLElement | null;\n  private rippleSize = '';\n  private rippleScale = '';\n  private initialSize = 0;\n  private growAnimation?: Animation;\n  private state = State.INACTIVE;\n  private rippleStartEvent?: PointerEvent;\n  private checkBoundsAfterContextMenu = false;\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    const classes = {\n      'hovered': this.hovered,\n      'pressed': this.pressed,\n    };\n\n    return html`<div class=\"surface ${classMap(classes)}\"></div>`;\n  }\n\n  protected override update(changedProps: PropertyValues<Ripple>) {\n    if (changedProps.has('disabled') && this.disabled) {\n      this.hovered = false;\n      this.pressed = false;\n    }\n    super.update(changedProps);\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerenter(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerleave(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = false;\n\n    // release a held mouse or pen press that moves outside the element\n    if (this.state !== State.INACTIVE) {\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointerup(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    if (this.state === State.HOLDING) {\n      this.state = State.WAITING_FOR_CLICK;\n      return;\n    }\n\n    if (this.state === State.TOUCH_DELAY) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(this.rippleStartEvent);\n      return;\n    }\n  }\n\n  private async handlePointerdown(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.rippleStartEvent = event;\n    if (!this.isTouch(event)) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(event);\n      return;\n    }\n\n    // after a longpress contextmenu event, an extra `pointerdown` can be\n    // dispatched to the pressed element. Check that the down is within\n    // bounds of the element in this case.\n    if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = false;\n\n    // Wait for a hold after touch delay\n    this.state = State.TOUCH_DELAY;\n    await new Promise((resolve) => {\n      setTimeout(resolve, TOUCH_DELAY_MS);\n    });\n\n    if (this.state !== State.TOUCH_DELAY) {\n      return;\n    }\n\n    this.state = State.HOLDING;\n    this.startPressAnimation(event);\n  }\n\n  private handleClick() {\n    // Click is a MouseEvent in Firefox and Safari, so we cannot use\n    // `shouldReactToEvent`\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.state === State.WAITING_FOR_CLICK) {\n      this.endPressAnimation();\n      return;\n    }\n\n    if (this.state === State.INACTIVE) {\n      // keyboard synthesized click event\n      this.startPressAnimation();\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointercancel(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.endPressAnimation();\n  }\n\n  private handleContextmenu() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = true;\n    this.endPressAnimation();\n  }\n\n  private determineRippleSize() {\n    const {height, width} = this.getBoundingClientRect();\n    const maxDim = Math.max(height, width);\n    const softEdgeSize = Math.max(\n      SOFT_EDGE_CONTAINER_RATIO * maxDim,\n      SOFT_EDGE_MINIMUM_SIZE,\n    );\n\n    const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n    const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n    const maxRadius = hypotenuse + PADDING;\n\n    this.initialSize = initialSize;\n    this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n    this.rippleSize = `${initialSize}px`;\n  }\n\n  private getNormalizedPointerEventCoords(pointerEvent: PointerEvent): {\n    x: number;\n    y: number;\n  } {\n    const {scrollX, scrollY} = window;\n    const {left, top} = this.getBoundingClientRect();\n    const documentX = scrollX + left;\n    const documentY = scrollY + top;\n    const {pageX, pageY} = pointerEvent;\n    return {x: pageX - documentX, y: pageY - documentY};\n  }\n\n  private getTranslationCoordinates(positionEvent?: Event) {\n    const {height, width} = this.getBoundingClientRect();\n    // end in the center\n    const endPoint = {\n      x: (width - this.initialSize) / 2,\n      y: (height - this.initialSize) / 2,\n    };\n\n    let startPoint;\n    if (positionEvent instanceof PointerEvent) {\n      startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n    } else {\n      startPoint = {\n        x: width / 2,\n        y: height / 2,\n      };\n    }\n\n    // center around start point\n    startPoint = {\n      x: startPoint.x - this.initialSize / 2,\n      y: startPoint.y - this.initialSize / 2,\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private startPressAnimation(positionEvent?: Event) {\n    if (!this.mdRoot) {\n      return;\n    }\n\n    this.pressed = true;\n    this.growAnimation?.cancel();\n    this.determineRippleSize();\n    const {startPoint, endPoint} =\n      this.getTranslationCoordinates(positionEvent);\n    const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n    const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n\n    this.growAnimation = this.mdRoot.animate(\n      {\n        top: [0, 0],\n        left: [0, 0],\n        height: [this.rippleSize, this.rippleSize],\n        width: [this.rippleSize, this.rippleSize],\n        transform: [\n          `translate(${translateStart}) scale(1)`,\n          `translate(${translateEnd}) scale(${this.rippleScale})`,\n        ],\n      },\n      {\n        pseudoElement: PRESS_PSEUDO,\n        duration: PRESS_GROW_MS,\n        easing: EASING.STANDARD,\n        fill: ANIMATION_FILL,\n      },\n    );\n  }\n\n  private async endPressAnimation() {\n    this.rippleStartEvent = undefined;\n    this.state = State.INACTIVE;\n    const animation = this.growAnimation;\n    let pressAnimationPlayState = Infinity;\n    if (typeof animation?.currentTime === 'number') {\n      pressAnimationPlayState = animation.currentTime;\n    } else if (animation?.currentTime) {\n      pressAnimationPlayState = animation.currentTime.to('ms').value;\n    }\n\n    if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n      this.pressed = false;\n      return;\n    }\n\n    await new Promise((resolve) => {\n      setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n    });\n\n    if (this.growAnimation !== animation) {\n      // A new press animation was started. The old animation was canceled and\n      // should not finish the pressed state.\n      return;\n    }\n\n    this.pressed = false;\n  }\n\n  /**\n   * Returns `true` if\n   *  - the ripple element is enabled\n   *  - the pointer is primary for the input type\n   *  - the pointer is the pointer that started the interaction, or will start\n   * the interaction\n   *  - the pointer is a touch, or the pointer state has the primary button\n   * held, or the pointer is hovering\n   */\n  private shouldReactToEvent(event: PointerEvent) {\n    if (this.disabled || !event.isPrimary) {\n      return false;\n    }\n\n    if (\n      this.rippleStartEvent &&\n      this.rippleStartEvent.pointerId !== event.pointerId\n    ) {\n      return false;\n    }\n\n    if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n      return !this.isTouch(event);\n    }\n\n    const isPrimaryButton = event.buttons === 1;\n    return this.isTouch(event) || isPrimaryButton;\n  }\n\n  /**\n   * Check if the event is within the bounds of the element.\n   *\n   * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n   */\n  private inBounds({x, y}: PointerEvent) {\n    const {top, left, bottom, right} = this.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private isTouch({pointerType}: PointerEvent) {\n    return pointerType === 'touch';\n  }\n\n  /** @private */\n  async handleEvent(event: Event) {\n    if (FORCED_COLORS?.matches) {\n      // Skip event logic since the ripple is `display: none`.\n      return;\n    }\n\n    switch (event.type) {\n      case 'click':\n        this.handleClick();\n        break;\n      case 'contextmenu':\n        this.handleContextmenu();\n        break;\n      case 'pointercancel':\n        this.handlePointercancel(event as PointerEvent);\n        break;\n      case 'pointerdown':\n        await this.handlePointerdown(event as PointerEvent);\n        break;\n      case 'pointerenter':\n        this.handlePointerenter(event as PointerEvent);\n        break;\n      case 'pointerleave':\n        this.handlePointerleave(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.handlePointerup(event as PointerEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./ripple/internal/ripple-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-ripple-hover-opacity, 0.08)}.pressed::after{opacity:var(--md-ripple-pressed-opacity, 0.12);transition-duration:105ms}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Ripple} from './internal/ripple.js';\nimport {styles} from './internal/ripple-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\ntype Falsy = null | undefined | false | 0 | -0 | 0n | '';\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<C extends Falsy, T, F = undefined>(\n  condition: C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F\n): F;\nexport function when<C, T, F>(\n  condition: C extends Falsy ? never : C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F\n): T;\nexport function when<C, T, F = undefined>(\n  condition: C,\n  trueCase: (c: Exclude<C, Falsy>) => T,\n  falseCase?: (c: Extract<C, Falsy>) => F\n): C extends Falsy ? F : T;\nexport function when(\n  condition: unknown,\n  trueCase: (c: unknown) => unknown,\n  falseCase?: (c: unknown) => unknown\n): unknown {\n  return condition ? trueCase(condition) : falseCase?.(condition);\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element: HTMLElement) {\n  const event = new MouseEvent('click', {bubbles: true});\n  element.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event: Event) {\n  // Event must start at the event target.\n  if (event.currentTarget !== event.target) {\n    return false;\n  }\n  // Event must not be retargeted from shadowRoot.\n  if (event.composedPath()[0] !== event.target) {\n    return false;\n  }\n  // Target must not be disabled; this should only occur for a synthetically\n  // dispatched click.\n  if ((event.target as EventTarget & {disabled: boolean}).disabled) {\n    return false;\n  }\n  // This is an activation if the event should not be squelched.\n  return !squelchEvent(event);\n}\n\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event: Event) {\n  const squelched = isSquelchingEvents;\n  if (squelched) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n  squelchEventsForMicrotask();\n  return squelched;\n}\n\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n  isSquelchingEvents = true;\n  // Need to pause for just one microtask.\n  // tslint:disable-next-line\n  await null;\n  isSquelchingEvents = false;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query, queryAsync, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {redispatchEvent} from '../../internal/events/redispatch-event.js';\nimport {mixinElementInternals} from '../../labs/behaviors/element-internals.js';\nimport {\n  getFormValue,\n  mixinFormAssociated,\n} from '../../labs/behaviors/form-associated.js';\nimport {MdRipple} from '../../ripple/ripple.js';\n\n// Disable warning for classMap with destructuring\n// tslint:disable:no-implicit-dictionary-conversion\n\n// Separate variable needed for closure.\nconst sliderBaseClass = mixinFormAssociated(mixinElementInternals(LitElement));\n\n/**\n * Slider component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Slider extends sliderBaseClass {\n  static {\n    requestUpdateOnAriaChange(Slider);\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /**\n   * The slider minimum value\n   */\n  @property({type: Number}) min = 0;\n\n  /**\n   * The slider maximum value\n   */\n  @property({type: Number}) max = 100;\n\n  /**\n   * The slider value displayed when range is false.\n   */\n  @property({type: Number}) value?: number;\n\n  /**\n   * The slider start value displayed when range is true.\n   */\n  @property({type: Number, attribute: 'value-start'}) valueStart?: number;\n\n  /**\n   * The slider end value displayed when range is true.\n   */\n  @property({type: Number, attribute: 'value-end'}) valueEnd?: number;\n\n  /**\n   * An optional label for the slider's value displayed when range is\n   * false; if not set, the label is the value itself.\n   */\n  @property({attribute: 'value-label'}) valueLabel = '';\n\n  /**\n   * An optional label for the slider's start value displayed when\n   * range is true; if not set, the label is the valueStart itself.\n   */\n  @property({attribute: 'value-label-start'}) valueLabelStart = '';\n\n  /**\n   * An optional label for the slider's end value displayed when\n   * range is true; if not set, the label is the valueEnd itself.\n   */\n  @property({attribute: 'value-label-end'}) valueLabelEnd = '';\n\n  /**\n   * Aria label for the slider's start handle displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-label-start'}) ariaLabelStart = '';\n\n  /**\n   * Aria value text for the slider's start value displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-valuetext-start'}) ariaValueTextStart = '';\n\n  /**\n   * Aria label for the slider's end handle displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-label-end'}) ariaLabelEnd = '';\n\n  /**\n   * Aria value text for the slider's end value displayed when\n   * range is true.\n   */\n  @property({attribute: 'aria-valuetext-end'}) ariaValueTextEnd = '';\n\n  /**\n   * The step between values.\n   */\n  @property({type: Number}) step = 1;\n\n  /**\n   * Whether or not to show tick marks.\n   */\n  @property({type: Boolean}) ticks = false;\n\n  /**\n   * Whether or not to show a value label when activated.\n   */\n  @property({type: Boolean}) labeled = false;\n\n  /**\n   * Whether or not to show a value range. When false, the slider displays\n   * a slideable handle for the value property; when true, it displays\n   * slideable handles for the valueStart and valueEnd properties.\n   */\n  @property({type: Boolean}) range = false;\n\n  /**\n   * The HTML name to use in form submission for a range slider's starting\n   * value. Use `name` instead if both the start and end values should use the\n   * same name.\n   */\n  get nameStart() {\n    return this.getAttribute('name-start') ?? this.name;\n  }\n  set nameStart(name: string) {\n    this.setAttribute('name-start', name);\n  }\n\n  /**\n   * The HTML name to use in form submission for a range slider's ending value.\n   * Use `name` instead if both the start and end values should use the same\n   * name.\n   */\n  get nameEnd() {\n    return this.getAttribute('name-end') ?? this.nameStart;\n  }\n  set nameEnd(name: string) {\n    this.setAttribute('name-end', name);\n  }\n\n  @query('input.start') private readonly inputStart!: HTMLInputElement | null;\n  @query('.handle.start') private readonly handleStart!: HTMLDivElement | null;\n  @queryAsync('md-ripple.start')\n  private readonly rippleStart!: Promise<MdRipple | null>;\n\n  @query('input.end') private readonly inputEnd!: HTMLInputElement | null;\n  @query('.handle.end') private readonly handleEnd!: HTMLDivElement | null;\n  @queryAsync('md-ripple.end')\n  private readonly rippleEnd!: Promise<MdRipple | null>;\n\n  // handle hover/pressed states are set manually since the handle\n  // does not receive pointer events so that the native inputs are\n  // interaction targets.\n  @state() private handleStartHover = false;\n  @state() private handleEndHover = false;\n\n  @state() private startOnTop = false;\n  @state() private handlesOverlapping = false;\n\n  @state() private renderValueStart?: number;\n  @state() private renderValueEnd?: number;\n\n  // Note: start aria-* properties are only applied when range=true, which is\n  // why they do not need to handle both cases.\n  private get renderAriaLabelStart() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return (\n      this.ariaLabelStart ||\n      (ariaLabel && `${ariaLabel} start`) ||\n      this.valueLabelStart ||\n      String(this.valueStart)\n    );\n  }\n\n  private get renderAriaValueTextStart() {\n    return (\n      this.ariaValueTextStart || this.valueLabelStart || String(this.valueStart)\n    );\n  }\n\n  // Note: end aria-* properties are applied for single and range sliders, which\n  // is why it needs to handle `this.range` (while start aria-* properties do\n  // not).\n  private get renderAriaLabelEnd() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    if (this.range) {\n      return (\n        this.ariaLabelEnd ||\n        (ariaLabel && `${ariaLabel} end`) ||\n        this.valueLabelEnd ||\n        String(this.valueEnd)\n      );\n    }\n\n    return ariaLabel || this.valueLabel || String(this.value);\n  }\n\n  private get renderAriaValueTextEnd() {\n    if (this.range) {\n      return (\n        this.ariaValueTextEnd || this.valueLabelEnd || String(this.valueEnd)\n      );\n    }\n\n    // Needed for conformance\n    const {ariaValueText} = this as ARIAMixinStrict;\n    return ariaValueText || this.valueLabel || String(this.value);\n  }\n\n  // used in synthetic events generated to control ripple hover state.\n  private ripplePointerId = 1;\n\n  // flag to prevent processing of re-dispatched input event.\n  private isRedispatchingEvent = false;\n\n  private action?: Action;\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', (event: MouseEvent) => {\n        if (!isActivationClick(event) || !this.inputEnd) {\n          return;\n        }\n        this.focus();\n        dispatchActivationClick(this.inputEnd);\n      });\n    }\n  }\n\n  override focus() {\n    this.inputEnd?.focus();\n  }\n\n  protected override willUpdate(changed: PropertyValues) {\n    this.renderValueStart = changed.has('valueStart')\n      ? this.valueStart\n      : this.inputStart?.valueAsNumber;\n    const endValueChanged =\n      (changed.has('valueEnd') && this.range) || changed.has('value');\n    this.renderValueEnd = endValueChanged\n      ? this.range\n        ? this.valueEnd\n        : this.value\n      : this.inputEnd?.valueAsNumber;\n    // manually handle ripple hover state since the handle is pointer events\n    // none.\n    if (changed.get('handleStartHover') !== undefined) {\n      this.toggleRippleHover(this.rippleStart, this.handleStartHover);\n    } else if (changed.get('handleEndHover') !== undefined) {\n      this.toggleRippleHover(this.rippleEnd, this.handleEndHover);\n    }\n  }\n\n  protected override updated(changed: PropertyValues) {\n    // Validate input rendered value and re-render if necessary. This ensures\n    // the rendred handle stays in sync with the input thumb which is used for\n    // interaction. These can get out of sync if a supplied value does not\n    // map to an exactly stepped value between min and max.\n    if (this.range) {\n      this.renderValueStart = this.inputStart!.valueAsNumber;\n    }\n    this.renderValueEnd = this.inputEnd!.valueAsNumber;\n    // update values if they are unset\n    // when using a range, default to equi-distant between\n    // min - valueStart - valueEnd - max\n    if (this.range) {\n      const segment = (this.max - this.min) / 3;\n      if (this.valueStart === undefined) {\n        this.inputStart!.valueAsNumber = this.min + segment;\n        // read actual value from input\n        const v = this.inputStart!.valueAsNumber;\n        this.valueStart = this.renderValueStart = v;\n      }\n      if (this.valueEnd === undefined) {\n        this.inputEnd!.valueAsNumber = this.min + 2 * segment;\n        // read actual value from input\n        const v = this.inputEnd!.valueAsNumber;\n        this.valueEnd = this.renderValueEnd = v;\n      }\n    } else {\n      this.value ??= this.renderValueEnd;\n    }\n    if (\n      changed.has('range') ||\n      changed.has('renderValueStart') ||\n      changed.has('renderValueEnd') ||\n      this.isUpdatePending\n    ) {\n      // Only check if the handle nubs are overlapping, as the ripple touch\n      // target extends subtantially beyond the boundary of the handle nub.\n      const startNub = this.handleStart?.querySelector('.handleNub');\n      const endNub = this.handleEnd?.querySelector('.handleNub');\n      this.handlesOverlapping = isOverlapping(startNub, endNub);\n    }\n    // called to finish the update imediately;\n    // note, this is a no-op unless an update is scheduled\n    this.performUpdate();\n  }\n\n  protected override render() {\n    const step = this.step === 0 ? 1 : this.step;\n    const range = Math.max(this.max - this.min, step);\n    const startFraction = this.range\n      ? ((this.renderValueStart ?? this.min) - this.min) / range\n      : 0;\n    const endFraction = ((this.renderValueEnd ?? this.min) - this.min) / range;\n    const containerStyles = {\n      // for clipping inputs and active track.\n      '--_start-fraction': String(startFraction),\n      '--_end-fraction': String(endFraction),\n      // for generating tick marks\n      '--_tick-count': String(range / step),\n    };\n    const containerClasses = {ranged: this.range};\n\n    // optional label values to show in place of the value.\n    const labelStart = this.valueLabelStart || String(this.renderValueStart);\n    const labelEnd =\n      (this.range ? this.valueLabelEnd : this.valueLabel) ||\n      String(this.renderValueEnd);\n\n    const inputStartProps = {\n      start: true,\n      value: this.renderValueStart,\n      ariaLabel: this.renderAriaLabelStart,\n      ariaValueText: this.renderAriaValueTextStart,\n      ariaMin: this.min,\n      ariaMax: this.valueEnd ?? this.max,\n    };\n\n    const inputEndProps = {\n      start: false,\n      value: this.renderValueEnd,\n      ariaLabel: this.renderAriaLabelEnd,\n      ariaValueText: this.renderAriaValueTextEnd,\n      ariaMin: this.range ? this.valueStart ?? this.min : this.min,\n      ariaMax: this.max,\n    };\n\n    const handleStartProps = {\n      start: true,\n      hover: this.handleStartHover,\n      label: labelStart,\n    };\n\n    const handleEndProps = {\n      start: false,\n      hover: this.handleEndHover,\n      label: labelEnd,\n    };\n\n    const handleContainerClasses = {\n      hover: this.handleStartHover || this.handleEndHover,\n    };\n\n    return html` <div\n      class=\"container ${classMap(containerClasses)}\"\n      style=${styleMap(containerStyles)}>\n      ${when(this.range, () => this.renderInput(inputStartProps))}\n      ${this.renderInput(inputEndProps)} ${this.renderTrack()}\n      <div class=\"handleContainerPadded\">\n        <div class=\"handleContainerBlock\">\n          <div class=\"handleContainer ${classMap(handleContainerClasses)}\">\n            ${when(this.range, () => this.renderHandle(handleStartProps))}\n            ${this.renderHandle(handleEndProps)}\n          </div>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private renderTrack() {\n    return html`\n      <div class=\"track\"></div>\n      ${this.ticks ? html`<div class=\"tickmarks\"></div>` : nothing}\n    `;\n  }\n\n  private renderLabel(value: string) {\n    return html`<div class=\"label\" aria-hidden=\"true\">\n      <span class=\"labelContent\" part=\"label\">${value}</span>\n    </div>`;\n  }\n\n  private renderHandle({\n    start,\n    hover,\n    label,\n  }: {\n    start: boolean;\n    hover: boolean;\n    label: string;\n  }) {\n    const onTop = !this.disabled && start === this.startOnTop;\n    const isOverlapping = !this.disabled && this.handlesOverlapping;\n    const name = start ? 'start' : 'end';\n    return html`<div\n      class=\"handle ${classMap({\n        [name]: true,\n        hover,\n        onTop,\n        isOverlapping,\n      })}\">\n      <md-focus-ring part=\"focus-ring\" for=${name}></md-focus-ring>\n      <md-ripple\n        for=${name}\n        class=${name}\n        ?disabled=${this.disabled}></md-ripple>\n      <div class=\"handleNub\">\n        <md-elevation part=\"elevation\"></md-elevation>\n      </div>\n      ${when(this.labeled, () => this.renderLabel(label))}\n    </div>`;\n  }\n\n  private renderInput({\n    start,\n    value,\n    ariaLabel,\n    ariaValueText,\n    ariaMin,\n    ariaMax,\n  }: {\n    start: boolean;\n    value?: number;\n    ariaLabel: string;\n    ariaValueText: string;\n    ariaMin: number;\n    ariaMax: number;\n  }) {\n    // Slider requires min/max set to the overall min/max for both inputs.\n    // This is reported to screen readers, which is why we need aria-valuemin\n    // and aria-valuemax.\n    const name = start ? `start` : `end`;\n    return html`<input\n      type=\"range\"\n      class=\"${classMap({\n        start,\n        end: !start,\n      })}\"\n      @focus=${this.handleFocus}\n      @pointerdown=${this.handleDown}\n      @pointerup=${this.handleUp}\n      @pointerenter=${this.handleEnter}\n      @pointermove=${this.handleMove}\n      @pointerleave=${this.handleLeave}\n      @keydown=${this.handleKeydown}\n      @keyup=${this.handleKeyup}\n      @input=${this.handleInput}\n      @change=${this.handleChange}\n      id=${name}\n      .disabled=${this.disabled}\n      .min=${String(this.min)}\n      aria-valuemin=${ariaMin}\n      .max=${String(this.max)}\n      aria-valuemax=${ariaMax}\n      .step=${String(this.step)}\n      .value=${String(value)}\n      .tabIndex=${start ? 1 : 0}\n      aria-label=${ariaLabel || nothing}\n      aria-valuetext=${ariaValueText} />`;\n  }\n\n  private async toggleRippleHover(\n    ripple: Promise<MdRipple | null>,\n    hovering: boolean,\n  ) {\n    const rippleEl = await ripple;\n    if (!rippleEl) {\n      return;\n    }\n    // TODO(b/269799771): improve slider ripple connection\n    if (hovering) {\n      rippleEl.handlePointerenter(\n        new PointerEvent('pointerenter', {\n          isPrimary: true,\n          pointerId: this.ripplePointerId,\n        }),\n      );\n    } else {\n      rippleEl.handlePointerleave(\n        new PointerEvent('pointerleave', {\n          isPrimary: true,\n          pointerId: this.ripplePointerId,\n        }),\n      );\n    }\n  }\n\n  private handleFocus(event: Event) {\n    this.updateOnTop(event.target as HTMLInputElement);\n  }\n\n  private startAction(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const fixed =\n      target === this.inputStart ? this.inputEnd! : this.inputStart!;\n    this.action = {\n      canFlip: event.type === 'pointerdown',\n      flipped: false,\n      target,\n      fixed,\n      values: new Map([\n        [target, target.valueAsNumber],\n        [fixed, fixed?.valueAsNumber],\n      ]),\n    };\n  }\n\n  private finishAction(event: Event) {\n    this.action = undefined;\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    this.startAction(event);\n  }\n\n  private handleKeyup(event: KeyboardEvent) {\n    this.finishAction(event);\n  }\n\n  private handleDown(event: PointerEvent) {\n    this.startAction(event);\n    this.ripplePointerId = event.pointerId;\n    const isStart = (event.target as HTMLInputElement) === this.inputStart;\n    // Since handle moves to pointer on down and there may not be a move,\n    // it needs to be considered hovered..\n    this.handleStartHover =\n      !this.disabled && isStart && Boolean(this.handleStart);\n    this.handleEndHover = !this.disabled && !isStart && Boolean(this.handleEnd);\n  }\n\n  private async handleUp(event: PointerEvent) {\n    if (!this.action) {\n      return;\n    }\n\n    const {target, values, flipped} = this.action;\n    //  Async here for Firefox because input can be after pointerup\n    //  when value is calmped.\n    await new Promise(requestAnimationFrame);\n    if (target !== undefined) {\n      // Ensure Safari focuses input so label renders.\n      // Ensure any flipped input is focused so the tab order is right.\n      target.focus();\n      // When action is flipped, change must be fired manually since the\n      // real event target did not change.\n      if (flipped && target.valueAsNumber !== values.get(target)!) {\n        target.dispatchEvent(new Event('change', {bubbles: true}));\n      }\n    }\n    this.finishAction(event);\n  }\n\n  /**\n   * The move handler tracks handle hovering to facilitate proper ripple\n   * behavior on the slider handle. This is needed because user interaction with\n   * the native input is leveraged to position the handle. Because the separate\n   * displayed handle element has pointer events disabled (to allow interaction\n   * with the input) and the input's handle is a pseudo-element, neither can be\n   * the ripple's interactive element. Therefore the input is the ripple's\n   * interactive element and has a `ripple` directive; however the ripple\n   * is gated on the handle being hovered. In addition, because the ripple\n   * hover state is being specially handled, it must be triggered independent\n   * of the directive. This is done based on the hover state when the\n   * slider is updated.\n   */\n  private handleMove(event: PointerEvent) {\n    this.handleStartHover = !this.disabled && inBounds(event, this.handleStart);\n    this.handleEndHover = !this.disabled && inBounds(event, this.handleEnd);\n  }\n\n  private handleEnter(event: PointerEvent) {\n    this.handleMove(event);\n  }\n\n  private handleLeave() {\n    this.handleStartHover = false;\n    this.handleEndHover = false;\n  }\n\n  private updateOnTop(input: HTMLInputElement) {\n    this.startOnTop = input.classList.contains('start');\n  }\n\n  private needsClamping() {\n    if (!this.action) {\n      return false;\n    }\n\n    const {target, fixed} = this.action;\n    const isStart = target === this.inputStart;\n    return isStart\n      ? target.valueAsNumber > fixed.valueAsNumber\n      : target.valueAsNumber < fixed.valueAsNumber;\n  }\n\n  // if start/end start coincident and the first drag input would e.g. move\n  // start > end, avoid clamping and \"flip\" to use the other input\n  // as the action target.\n  private isActionFlipped() {\n    const {action} = this;\n    if (!action) {\n      return false;\n    }\n\n    const {target, fixed, values} = action;\n    if (action.canFlip) {\n      const coincident = values.get(target) === values.get(fixed);\n      if (coincident && this.needsClamping()) {\n        action.canFlip = false;\n        action.flipped = true;\n        action.target = fixed;\n        action.fixed = target;\n      }\n    }\n    return action.flipped;\n  }\n\n  // when flipped, apply the drag input to the flipped target and reset\n  // the actual target.\n  private flipAction() {\n    if (!this.action) {\n      return false;\n    }\n\n    const {target, fixed, values} = this.action;\n    const changed = target.valueAsNumber !== fixed.valueAsNumber;\n    target.valueAsNumber = fixed.valueAsNumber;\n    fixed.valueAsNumber = values.get(fixed)!;\n    return changed;\n  }\n\n  // clamp such that start does not move beyond end and visa versa.\n  private clampAction() {\n    if (!this.needsClamping() || !this.action) {\n      return false;\n    }\n    const {target, fixed} = this.action;\n    target.valueAsNumber = fixed.valueAsNumber;\n    return true;\n  }\n\n  private handleInput(event: InputEvent) {\n    // avoid processing a re-dispatched event\n    if (this.isRedispatchingEvent) {\n      return;\n    }\n    let stopPropagation = false;\n    let redispatch = false;\n    if (this.range) {\n      if (this.isActionFlipped()) {\n        stopPropagation = true;\n        redispatch = this.flipAction();\n      }\n      if (this.clampAction()) {\n        stopPropagation = true;\n        redispatch = false;\n      }\n    }\n    const target = event.target as HTMLInputElement;\n    this.updateOnTop(target);\n    // update value only on interaction\n    if (this.range) {\n      this.valueStart = this.inputStart!.valueAsNumber;\n      this.valueEnd = this.inputEnd!.valueAsNumber;\n    } else {\n      this.value = this.inputEnd!.valueAsNumber;\n    }\n    // control external visibility of input event\n    if (stopPropagation) {\n      event.stopPropagation();\n    }\n    // ensure event path is correct when flipped.\n    if (redispatch) {\n      this.isRedispatchingEvent = true;\n      redispatchEvent(target, event);\n      this.isRedispatchingEvent = false;\n    }\n  }\n\n  private handleChange(event: Event) {\n    // prevent keyboard triggered changes from dispatching for\n    // clamped values; note, this only occurs for keyboard\n    const changeTarget = event.target as HTMLInputElement;\n    const {target, values} = this.action ?? {};\n    const squelch =\n      target && target.valueAsNumber === values!.get(changeTarget)!;\n    if (!squelch) {\n      redispatchEvent(this, event);\n    }\n    // ensure keyboard triggered change clears action.\n    this.finishAction(event);\n  }\n\n  // Writable mixin properties for lit-html binding, needed for lit-analyzer\n  declare disabled: boolean;\n  declare name: string;\n\n  override [getFormValue]() {\n    if (this.range) {\n      const data = new FormData();\n      data.append(this.nameStart, String(this.valueStart));\n      data.append(this.nameEnd, String(this.valueEnd));\n      return data;\n    }\n\n    return String(this.value);\n  }\n\n  override formResetCallback() {\n    if (this.range) {\n      const valueStart = this.getAttribute('value-start');\n      this.valueStart = valueStart !== null ? Number(valueStart) : undefined;\n      const valueEnd = this.getAttribute('value-end');\n      this.valueEnd = valueEnd !== null ? Number(valueEnd) : undefined;\n      return;\n    }\n    const value = this.getAttribute('value');\n    this.value = value !== null ? Number(value) : undefined;\n  }\n\n  override formStateRestoreCallback(\n    state: string | Array<[string, string]> | null,\n  ) {\n    if (Array.isArray(state)) {\n      const [[, valueStart], [, valueEnd]] = state;\n      this.valueStart = Number(valueStart);\n      this.valueEnd = Number(valueEnd);\n      this.range = true;\n      return;\n    }\n\n    this.value = Number(state);\n    this.range = false;\n  }\n}\n\nfunction inBounds({x, y}: PointerEvent, element?: HTMLElement | null) {\n  if (!element) {\n    return false;\n  }\n  const {top, left, bottom, right} = element.getBoundingClientRect();\n  return x >= left && x <= right && y >= top && y <= bottom;\n}\n\nfunction isOverlapping(\n  elA: Element | null | undefined,\n  elB: Element | null | undefined,\n) {\n  if (!(elA && elB)) {\n    return false;\n  }\n  const a = elA.getBoundingClientRect();\n  const b = elB.getBoundingClientRect();\n  return !(\n    a.top > b.bottom ||\n    a.right < b.left ||\n    a.bottom < b.top ||\n    a.left > b.right\n  );\n}\n\ninterface Action {\n  canFlip: boolean;\n  flipped: boolean;\n  target: HTMLInputElement;\n  fixed: HTMLInputElement;\n  values: Map<HTMLInputElement | undefined, number | undefined>;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./slider/internal/slider-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-track-color: var(--md-slider-active-track-color, var(--md-sys-color-primary, #6750a4));--_active-track-height: var(--md-slider-active-track-height, 4px);--_active-track-shape: var(--md-slider-active-track-shape, var(--md-sys-shape-corner-full, 9999px));--_disabled-active-track-color: var(--md-slider-disabled-active-track-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-track-opacity: var(--md-slider-disabled-active-track-opacity, 0.38);--_disabled-handle-color: var(--md-slider-disabled-handle-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-handle-elevation: var(--md-slider-disabled-handle-elevation, 0);--_disabled-inactive-track-color: var(--md-slider-disabled-inactive-track-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-inactive-track-opacity: var(--md-slider-disabled-inactive-track-opacity, 0.12);--_focus-handle-color: var(--md-slider-focus-handle-color, var(--md-sys-color-primary, #6750a4));--_handle-color: var(--md-slider-handle-color, var(--md-sys-color-primary, #6750a4));--_handle-elevation: var(--md-slider-handle-elevation, 1);--_handle-height: var(--md-slider-handle-height, 20px);--_handle-shadow-color: var(--md-slider-handle-shadow-color, var(--md-sys-color-shadow, #000));--_handle-shape: var(--md-slider-handle-shape, var(--md-sys-shape-corner-full, 9999px));--_handle-width: var(--md-slider-handle-width, 20px);--_hover-handle-color: var(--md-slider-hover-handle-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-color: var(--md-slider-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_hover-state-layer-opacity: var(--md-slider-hover-state-layer-opacity, 0.08);--_inactive-track-color: var(--md-slider-inactive-track-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_inactive-track-height: var(--md-slider-inactive-track-height, 4px);--_inactive-track-shape: var(--md-slider-inactive-track-shape, var(--md-sys-shape-corner-full, 9999px));--_label-container-color: var(--md-slider-label-container-color, var(--md-sys-color-primary, #6750a4));--_label-container-height: var(--md-slider-label-container-height, 28px);--_pressed-handle-color: var(--md-slider-pressed-handle-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-color: var(--md-slider-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-slider-pressed-state-layer-opacity, 0.12);--_state-layer-size: var(--md-slider-state-layer-size, 40px);--_with-overlap-handle-outline-color: var(--md-slider-with-overlap-handle-outline-color, var(--md-sys-color-on-primary, #fff));--_with-overlap-handle-outline-width: var(--md-slider-with-overlap-handle-outline-width, 1px);--_with-tick-marks-active-container-color: var(--md-slider-with-tick-marks-active-container-color, var(--md-sys-color-on-primary, #fff));--_with-tick-marks-container-size: var(--md-slider-with-tick-marks-container-size, 2px);--_with-tick-marks-disabled-container-color: var(--md-slider-with-tick-marks-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_with-tick-marks-inactive-container-color: var(--md-slider-with-tick-marks-inactive-container-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-slider-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-slider-label-text-font, var(--md-sys-typescale-label-medium-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-slider-label-text-line-height, var(--md-sys-typescale-label-medium-line-height, 1rem));--_label-text-size: var(--md-slider-label-text-size, var(--md-sys-typescale-label-medium-size, 0.75rem));--_label-text-weight: var(--md-slider-label-text-weight, var(--md-sys-typescale-label-medium-weight, var(--md-ref-typeface-weight-medium, 500)));--_start-fraction: 0;--_end-fraction: 0;--_tick-count: 0;display:inline-flex;vertical-align:middle;min-inline-size:200px;--md-elevation-level: var(--_handle-elevation);--md-elevation-shadow-color: var(--_handle-shadow-color)}md-focus-ring{height:48px;inset:unset;width:48px}md-elevation{transition-duration:250ms}@media(prefers-reduced-motion){.label{transition-duration:0}}:host([disabled]){opacity:var(--_disabled-active-track-opacity);--md-elevation-level: var(--_disabled-handle-elevation)}.container{flex:1;display:flex;align-items:center;position:relative;block-size:var(--_state-layer-size);pointer-events:none;touch-action:none}.track,.tickmarks{position:absolute;inset:0;display:flex;align-items:center}.track::before,.tickmarks::before,.track::after,.tickmarks::after{position:absolute;content:\"\";inset-inline-start:calc(var(--_state-layer-size)/2 - var(--_with-tick-marks-container-size));inset-inline-end:calc(var(--_state-layer-size)/2 - var(--_with-tick-marks-container-size));background-size:calc((100% - var(--_with-tick-marks-container-size)*2)/var(--_tick-count)) 100%}.track::before,.tickmarks::before{block-size:var(--_inactive-track-height);border-radius:var(--_inactive-track-shape)}.track::before{background:var(--_inactive-track-color)}.tickmarks::before{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-inactive-container-color) 0, var(--_with-tick-marks-inactive-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}:host([disabled]) .track::before{opacity:calc(1/var(--_disabled-active-track-opacity)*var(--_disabled-inactive-track-opacity));background:var(--_disabled-inactive-track-color)}.track::after,.tickmarks::after{block-size:var(--_active-track-height);border-radius:var(--_active-track-shape);clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))) 0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)))}.track::after{background:var(--_active-track-color)}.tickmarks::after{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-active-container-color) 0, var(--_with-tick-marks-active-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}.track:dir(rtl)::after{clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)) 0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))))}.tickmarks:dir(rtl)::after{clip-path:inset(0 calc(var(--_with-tick-marks-container-size) * min(var(--_start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--_start-fraction)) 0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--_end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--_end-fraction))))}:host([disabled]) .track::after{background:var(--_disabled-active-track-color)}:host([disabled]) .tickmarks::before{background-image:radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-disabled-container-color) 0, var(--_with-tick-marks-disabled-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))}.handleContainerPadded{position:relative;block-size:100%;inline-size:100%;padding-inline:calc(var(--_state-layer-size)/2)}.handleContainerBlock{position:relative;block-size:100%;inline-size:100%}.handleContainer{position:absolute;inset-block-start:0;inset-block-end:0;inset-inline-start:calc(100%*var(--_start-fraction));inline-size:calc(100%*(var(--_end-fraction) - var(--_start-fraction)))}.handle{position:absolute;block-size:var(--_state-layer-size);inline-size:var(--_state-layer-size);border-radius:var(--_handle-shape);display:flex;place-content:center;place-items:center}.handleNub{position:absolute;height:var(--_handle-height);width:var(--_handle-width);border-radius:var(--_handle-shape);background:var(--_handle-color)}:host([disabled]) .handleNub{background:var(--_disabled-handle-color)}input.end:focus~.handleContainerPadded .handle.end>.handleNub,input.start:focus~.handleContainerPadded .handle.start>.handleNub{background:var(--_focus-handle-color)}.container>.handleContainerPadded .handle.hover>.handleNub{background:var(--_hover-handle-color)}:host(:not([disabled])) input.end:active~.handleContainerPadded .handle.end>.handleNub,:host(:not([disabled])) input.start:active~.handleContainerPadded .handle.start>.handleNub{background:var(--_pressed-handle-color)}.onTop.isOverlapping .label,.onTop.isOverlapping .label::before{outline:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}.onTop.isOverlapping .handleNub{border:var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width)}.handle.start{inset-inline-start:calc(0px - var(--_state-layer-size)/2)}.handle.end{inset-inline-end:calc(0px - var(--_state-layer-size)/2)}.label{position:absolute;box-sizing:border-box;display:flex;padding:4px;place-content:center;place-items:center;border-radius:var(--md-sys-shape-corner-full, 9999px);color:var(--_label-text-color);font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);inset-block-end:100%;min-inline-size:var(--_label-container-height);min-block-size:var(--_label-container-height);background:var(--_label-container-color);transition:transform 100ms cubic-bezier(0.2, 0, 0, 1);transform-origin:center bottom;transform:scale(0)}:host(:focus-within) .label,.handleContainer.hover .label,:where(:has(input:active)) .label{transform:scale(1)}.label::before,.label::after{position:absolute;display:block;content:\"\";background:inherit}.label::before{inline-size:calc(var(--_label-container-height)/2);block-size:calc(var(--_label-container-height)/2);bottom:calc(var(--_label-container-height)/-10);transform:rotate(45deg)}.label::after{inset:0px;border-radius:inherit}.labelContent{z-index:1}input[type=range]{opacity:0;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;box-sizing:border-box;height:100%;width:100%;margin:0;background:rgba(0,0,0,0);cursor:pointer;pointer-events:auto;appearance:none}input[type=range]:focus{outline:none}::-webkit-slider-runnable-track{-webkit-appearance:none}::-moz-range-track{appearance:none}::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;block-size:var(--_handle-height);inline-size:var(--_handle-width);opacity:0;z-index:2}input.end::-webkit-slider-thumb{--_track-and-knob-padding: calc( (var(--_state-layer-size) - var(--_handle-width)) / 2 );--_x-translate: calc( var(--_track-and-knob-padding) - 2 * var(--_end-fraction) * var(--_track-and-knob-padding) );transform:translateX(var(--_x-translate))}input.end:dir(rtl)::-webkit-slider-thumb{transform:translateX(calc(-1 * var(--_x-translate)))}input.start::-webkit-slider-thumb{--_track-and-knob-padding: calc( (var(--_state-layer-size) - var(--_handle-width)) / 2 );--_x-translate: calc( var(--_track-and-knob-padding) - 2 * var(--_start-fraction) * var(--_track-and-knob-padding) );transform:translateX(var(--_x-translate))}input.start:dir(rtl)::-webkit-slider-thumb{transform:translateX(calc(-1 * var(--_x-translate)))}::-moz-range-thumb{appearance:none;block-size:var(--_state-layer-size);inline-size:var(--_state-layer-size);transform:scaleX(0);opacity:0;z-index:2}.ranged input.start{clip-path:inset(0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2))) 0 0)}.ranged input.start:dir(rtl){clip-path:inset(0 0 0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2))))}.ranged input.end{clip-path:inset(0 0 0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2)))}.ranged input.end:dir(rtl){clip-path:inset(0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--_start-fraction) + (var(--_end-fraction) - var(--_start-fraction)) / 2)) 0 0)}.onTop{z-index:1}.handle{--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-ripple{border-radius:50%;height:var(--_state-layer-size);width:var(--_state-layer-size)}\n`;\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles as forcedColorsStyles} from './internal/forced-colors-styles.js';\nimport {Slider} from './internal/slider.js';\nimport {styles} from './internal/slider-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-slider': MdSlider;\n  }\n}\n\n/**\n * @summary Sliders allow users to view and select a value (or range) along\n * a track.\n *\n * @description\n * Changes made with sliders are immediate, allowing the user to make slider\n * adjustments while determining a selection. Sliders shouldn’t be used to\n * adjust settings with any delay in providing user feedback. Sliders reflect\n * the current state of the settings they control.\n *\n * __Example usages:__\n * - Sliders are ideal for adjusting settings such as volume and brightness, or\n * for applying image filters.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-slider')\nexport class MdSlider extends Slider {\n  static override styles: CSSResultOrNative[] = [styles, forcedColorsStyles];\n}\n"],
  "mappings": "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",
  "names": ["styles", "MdElevation", "styles", "styles", "MdFocusRing", "styles", "State", "EVENTS", "styles", "MdRipple", "styles", "isOverlapping", "state", "styles", "MdSlider", "styles"]
}
